@model IEnumerable<NETSPARKER.API.Models.ProductModel>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>
        <a asp-action="Create">Create New Product</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Url)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interval)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastMonitorTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NextMonitorTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductNotification)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Url)
                    </td>
                    <td>
                        @{
                            string displayInterval= ((NETSPARKER.Common.Helpers.IntervalMonitoring)(item.Interval)).ToString();
                            @Html.DisplayFor(modelItem => displayInterval)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastMonitorTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NextMonitorTime)
                    </td>
                    <td>
                        @foreach (var prodNot in item.ProductNotification)
                        {
                            string displayNotification = ((NETSPARKER.Common.Helpers.NotificationTypes)(prodNot.IDNotificationType)).ToString();

                            @Html.DisplayFor(modelItem => displayNotification)
                        }
                    </td>
                    <td>
                        <a asp-action="Create" asp-route-id="@item.ID">Edit</a> |
                        <a href="#" onclick="fnDeleteProduct(@item.ID)">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script type="text/javascript">
    function fnDeleteProduct(id) {
        if (confirm("Silmek istediğinizden emin misiniz?")) {

            var input = {
                'id': id
            };

            $.ajax({
                type: "GET", cache: false,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: input,
                url: "/JsonHelper/DeleteProduct",
                success: function (result) {
                       if (result.success == 0) {
                            window.location.href = '/Home/Index';
                        }
                        else {
                            alert(result.message)
                        }
                },
                error: function () { alert('Beklenmedik bir hata oluştu.'); }
            });
        }
    }

</script>